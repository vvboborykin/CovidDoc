//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v3.0.7.2
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace CovidDoc.Model
{
   /// <summary>
   /// Направление на мазок
   /// </summary>
   [System.ComponentModel.Description("Направление на мазок")]
   public partial class ReferralItem
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected ReferralItem()
      {
         IsLeaveCountry = false;

         Init();
      }

      /// <summary>
      /// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
      /// </summary>
      public static ReferralItem CreateReferralItemUnsafe()
      {
         return new ReferralItem();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="probedate"></param>
      /// <param name="lastvisitdate"></param>
      /// <param name="mkb"></param>
      /// <param name="isleavecountry"></param>
      /// <param name="deliverydate"></param>
      /// <param name="createdbyuser"></param>
      /// <param name="patient"></param>
      /// <param name="referralpack"></param>
      /// <param name="testreason"></param>
      /// <param name="doctor"></param>
      public ReferralItem(DateTime probedate, DateTime lastvisitdate, string mkb, DateTime deliverydate, global::CovidDoc.Model.AppUser createdbyuser, global::CovidDoc.Model.Patient patient, global::CovidDoc.Model.ReferralPack referralpack, global::CovidDoc.Model.TestReason testreason, global::CovidDoc.Model.Doctor doctor, bool isleavecountry = false)
      {
         this.ProbeDate = probedate;

         this.LastVisitDate = lastvisitdate;

         if (string.IsNullOrEmpty(mkb)) throw new ArgumentNullException(nameof(mkb));
         this.MKB = mkb;

         this.IsLeaveCountry = isleavecountry;

         this.DeliveryDate = deliverydate;

         if (createdbyuser == null) throw new ArgumentNullException(nameof(createdbyuser));
         this.CreatedByUser = createdbyuser;
         createdbyuser.CreatedItems.Add(this);

         if (patient == null) throw new ArgumentNullException(nameof(patient));
         this.Patient = patient;
         patient.ReferralItems.Add(this);

         if (referralpack == null) throw new ArgumentNullException(nameof(referralpack));
         this.ReferralPack = referralpack;
         referralpack.ReferralItems.Add(this);

         if (testreason == null) throw new ArgumentNullException(nameof(testreason));
         this.TestReason = testreason;
         testreason.ReferralItems.Add(this);

         if (doctor == null) throw new ArgumentNullException(nameof(doctor));
         this.Doctor = doctor;
         doctor.ReferralItems.Add(this);

         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="probedate"></param>
      /// <param name="lastvisitdate"></param>
      /// <param name="mkb"></param>
      /// <param name="isleavecountry"></param>
      /// <param name="deliverydate"></param>
      /// <param name="createdbyuser"></param>
      /// <param name="patient"></param>
      /// <param name="referralpack"></param>
      /// <param name="testreason"></param>
      /// <param name="doctor"></param>
      public static ReferralItem Create(DateTime probedate, DateTime lastvisitdate, string mkb, DateTime deliverydate, global::CovidDoc.Model.AppUser createdbyuser, global::CovidDoc.Model.Patient patient, global::CovidDoc.Model.ReferralPack referralpack, global::CovidDoc.Model.TestReason testreason, global::CovidDoc.Model.Doctor doctor, bool isleavecountry = false)
      {
         return new ReferralItem(probedate, lastvisitdate, mkb, deliverydate, createdbyuser, patient, referralpack, testreason, doctor, isleavecountry);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Identity, Indexed, Required
      /// Unique identifier
      /// </summary>
      [Key]
      [Required]
      [System.ComponentModel.Description("Unique identifier")]
      public long Id { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      [Display(Name="Дата забора")]
      public DateTime ProbeDate { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      [Display(Name="Дата последнего посещения")]
      public DateTime LastVisitDate { get; set; }

      /// <summary>
      /// Indexed, Required, Max length = 255
      /// </summary>
      [Required]
      [MaxLength(255)]
      [StringLength(255)]
      [Display(Name="МКБ")]
      public string MKB { get; set; }

      [Display(Name="Дата заболевания")]
      public DateTime? DiseaseDate { get; set; }

      [Display(Name="Длительность лечения")]
      public byte? CureDays { get; set; }

      /// <summary>
      /// Required, Default value = false
      /// </summary>
      [Required]
      [Display(Name="Покидал страну")]
      public bool IsLeaveCountry { get; set; }

      /// <summary>
      /// Indexed, Max length = 4096
      /// </summary>
      [MaxLength(4096)]
      [StringLength(4096)]
      [Display(Name="Паталогии")]
      public string Patalogy { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      [Display(Name="Дата доставки")]
      public DateTime DeliveryDate { get; set; }

      /// <summary>
      /// Max length = 50
      /// </summary>
      [MaxLength(50)]
      [StringLength(50)]
      [Display(Name="СТ")]
      public string Ct { get; set; }

      /*************************************************************************
       * Navigation properties
       *************************************************************************/

      [Display(Name="Повторное заболевание")]
      public virtual global::CovidDoc.Model.RecurrenceDisease RecurrenceDisease { get; set; }

      [Display(Name="Вакцинация")]
      public virtual global::CovidDoc.Model.Vaccination Vaccination { get; set; }

      [Display(Name="Госпитализация")]
      public virtual global::CovidDoc.Model.Hospitalization Hospitalization { get; set; }

      [Display(Name="Заказ")]
      public virtual global::CovidDoc.Model.LabOrder LabOrder { get; set; }

      [Display(Name="Результат")]
      public virtual global::CovidDoc.Model.LabResult LabResult { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Display(Name="Создал")]
      public virtual global::CovidDoc.Model.AppUser CreatedByUser { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Display(Name="Пациент")]
      public virtual global::CovidDoc.Model.Patient Patient { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Display(Name="Пакет")]
      public virtual global::CovidDoc.Model.ReferralPack ReferralPack { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Display(Name="Основание")]
      public virtual global::CovidDoc.Model.TestReason TestReason { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Display(Name="Врач")]
      public virtual global::CovidDoc.Model.Doctor Doctor { get; set; }

   }
}

