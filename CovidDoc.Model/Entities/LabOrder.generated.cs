//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v3.0.7.2
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace CovidDoc.Model
{
   /// <summary>
   /// Заказ
   /// </summary>
   [System.ComponentModel.Description("Заказ")]
   public partial class LabOrder
   {
      partial void Init();

      /// <summary>
      /// Default constructor
      /// </summary>
      public LabOrder()
      {
         Init();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="senddate"></param>
      /// <param name="testsystem"></param>
      /// <param name="labservice"></param>
      /// <param name="_referralitem0"></param>
      public LabOrder(DateTime senddate, global::CovidDoc.Model.TestSystem testsystem, global::CovidDoc.Model.LabService labservice, global::CovidDoc.Model.ReferralItem _referralitem0)
      {
         this.SendDate = senddate;

         if (testsystem == null) throw new ArgumentNullException(nameof(testsystem));
         this.TestSystem = testsystem;
         testsystem.LabOrders.Add(this);

         if (labservice == null) throw new ArgumentNullException(nameof(labservice));
         this.LabService = labservice;
         labservice.LabOrders.Add(this);

         if (_referralitem0 == null) throw new ArgumentNullException(nameof(_referralitem0));
         _referralitem0.LabOrder = this;

         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="senddate"></param>
      /// <param name="testsystem"></param>
      /// <param name="labservice"></param>
      /// <param name="_referralitem0"></param>
      public static LabOrder Create(DateTime senddate, global::CovidDoc.Model.TestSystem testsystem, global::CovidDoc.Model.LabService labservice, global::CovidDoc.Model.ReferralItem _referralitem0)
      {
         return new LabOrder(senddate, testsystem, labservice, _referralitem0);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Identity, Indexed, Required
      /// Unique identifier
      /// </summary>
      [Key]
      [Required]
      [System.ComponentModel.Description("Unique identifier")]
      public long Id { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      [Display(Name="Дата отправки")]
      public DateTime SendDate { get; set; }

      /*************************************************************************
       * Navigation properties
       *************************************************************************/

      /// <summary>
      /// Required
      /// </summary>
      [Display(Name="Тест система")]
      public virtual global::CovidDoc.Model.TestSystem TestSystem { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Display(Name="Услуга")]
      public virtual global::CovidDoc.Model.LabService LabService { get; set; }

   }
}

